generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  email          String        @unique
  name           String        @default("")
  preferences    Json          @default("{}")
  hashedPassword String        @default("")
  salt           String        @default("")
  GroupMember    GroupMember[] @relation("UserGroupMember")
}

model Group {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  description String
  GroupMember GroupMember[]
  GroupRole   GroupRole[]
}

model GroupMember {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id])
  user      User     @relation("UserGroupMember", fields: [userId], references: [id])
}

model GroupRole {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String
  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id])
}

enum Role {
  admin
  taskCreate
  taskRead
  taskUpdate
  taskDelete
  userCreate
  userRead
  userUpdate
  userDelete
  groupCreate
  groupRead
  groupUpdate
  groupDelete
  groupMemberCreate
  groupMemberRead
  groupMemberUpdate
  groupMemberDelete
  groupRoleCreate
  groupRoleRead
  groupRoleUpdate
  groupRoleDelete
  userRoleCreate
  userRoleRead
  userRoleUpdate
  userRoleDelete
}
