generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int           @id @default(autoincrement())
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  email               String        @unique
  name                String        @default("")
  preferences         Json          @default("{}")
  hashedPassword      String        @default("")
  salt                String        @default("")
  resetToken          String?
  resetTokenExpiresAt DateTime?
  GroupMember         GroupMember[] @relation("UserGroupMember")
}

model Group {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  description String
  GroupMember GroupMember[]
  GroupRole   GroupRole[]
}

model GroupMember {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  user      User     @relation("UserGroupMember", fields: [userId], references: [id], onDelete: Cascade)
}

model GroupRole {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String
  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
}
